{"version":3,"sources":["main.js"],"names":["jQuery","addClass","x","parent","print","children","$div","$","$childList","append"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAA,MAAM,CAAC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,KAAzB,EAAgCA,QAAhC,CAAyC,MAAzC,EAAiDA,QAAjD,CAA0D,OAA1D,GAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,CAAC,GAAGF,MAAM,CAAC,OAAD,CAAhB,EACA;AACA;;AAEAE,CAAC,CAACC,MAAF,GAAWC,KAAX;AACAF,CAAC,CAACG,QAAF,GAAaD,KAAb;AAEA,IAAME,IAAI,GAAGC,CAAC,CAAC,2BAAD,CAAd;AACA,IAAMC,UAAU,GAAGD,CAAC,CAAC,QAAD,CAApB;AACAA,CAAC,CAAC,MAAD,CAAD,CAAUE,MAAV,CAAiBD,UAAjB","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// const api = jQuery(\".test\"); //不返回元素，返回api对象\r\n// api.addClass(\"red\"); //遍历所有刚才获取的元素，添加.red\r\n// api.addClass(\"red\").addClass(\"blue\").addClass(\"green\");\r\n//this就是api\r\n//链式操作\r\n//api调用了函数，返回的为api，这样的话可以继续调用addClass\r\n\r\n// obj.fn(p1)  //函数里的this就是obj\r\n// obj.fn.call(obj,p1)\r\n\r\njQuery(\".test\").addClass(\"red\").addClass(\"blue\").addClass(\"green\");\r\n\r\n// const x1 = jQuery(\".test\").find(\".child\");\r\n// console.log(x1);\r\n\r\n// const api1 = jQuery(\".test\");\r\n// api1.addClass(\"black\");\r\n// const api2 = api1.find(\".child\").addClass(\"red\");\r\n// api1.addClass(\"white\");\r\n\r\n// jQuery(\".test\")\r\n//   .find(\".child\")\r\n//   .addClass(\"red\")\r\n//   .addClass(\"blue\")\r\n//   .addClass(\"yellow\")\r\n//   .end()\r\n//   .addClass(\"pink\");\r\nconst x = jQuery(\".test\");\r\n// .find(\".child\");\r\n// x.each((div) => console.log(div));\r\n\r\nx.parent().print();\r\nx.children().print();\r\n\r\nconst $div = $(\"<div><span>1</span></div>\");\r\nconst $childList = $(\".child\");\r\n$(\"body\").append($childList);\r\n"]}